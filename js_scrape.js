const { scrape } = require('./puppeteer');
const { call_py } = require('./js_call_python');

const handler = async (req, res, next) => {
    try {
        console.log(req.body)

        const body = req.body.body_type
        const post = req.body.postal_code
        const minYear = req.body.min_year
        const maxPrice = req.body.budget

        // const body = '1'
        // const post = 'k1n0b6'
        // const minYear = '2016'
        // const maxPrice = 40000
        await scrape(body, post, minYear, maxPrice)
            // .catch(console.error)

        // TODO:
        // https://javascript.info/async-await#error-handling
        // If we donâ€™t have try..catch, then the promise generated by the call of the async function f() becomes rejected. We can append .catch to handle it:
        // https://javascript.info/promise-error-handling

        console.log('done...')
        console.log('will call py...')
        const data = await call_py('recommend.py')
        res.json(data)
    } catch (e) {
        console.log(e)
        next(e)
    }
}

module.exports = {
    handler,
}
